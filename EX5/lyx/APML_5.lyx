#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{fullpage}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "David"
\font_sans "default" "David"
\font_typewriter "default" "Curlz MT"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype true
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\sumin}{\sum_{i=1}^{n}}
{\sum_{i=1}^{n}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumjn}{\sum_{j=1}^{n}}
{\sum_{j=1}^{n}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumim}{\sum_{i=1}^{m}}
{\sum_{i=1}^{m}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumjm}{\sum_{j=1}^{m}}
{\sum_{j=1}^{m}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumik}{\sum_{i=1}^{k}}
{\sum_{i=1}^{k}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumjk}{\sum_{j=1}^{k}}
{\sum_{j=1}^{k}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumkn}{\sum_{k=1}^{n}}
{\sum_{k=1}^{n}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumnk}{\sum_{n=1}^{k}}
{\sum_{n=1}^{k}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\sumkm}{\sum_{k=1}^{m}}
{\sum_{k=1}^{m}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\ser}[3]{#1_{1}#2#1_{2}#2#1_{2}#2#1_{3}#2....#2#1_{#3}}
{#1_{1}#2#1_{2}#2#1_{2}#2#1_{3}#2....#2#1_{#3}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\vn}{v_{1},v_{2},...v_{n}}
{v_{1},v_{2},...v_{n}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\vm}{v_{1},v_{2},...v_{m}}
{v_{1},v_{2},...v_{m}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\un}{u_{1},u_{2},...u_{n}}
{u_{1},u_{2},...u_{n}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\um}{u_{1},u_{2},...u_{m}}
{u_{1},u_{2},...u_{m}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\vk}{v_{1},v_{2},...v_{k}}
{v_{1},v_{2},...v_{k}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\vecmul}[6]{\left[\begin{matrix}#1\\
 #2\\
 #3 
\end{matrix}\right]\times\left[\begin{matrix}#4\\
 #5\\
 #6 
\end{matrix}\right]=\left[\begin{matrix}\left(#2\right)\cdot\left(#6\right)-\left(#3\right)\cdot\left(#5\right)\\
 \left(#3\right)\cdot\left(#4\right)-\left(#1\right)\cdot\left(#6\right)\\
 \left(#1\right)\cdot\left(#5\right)-\left(#2\right)\cdot\left(#4\right) 
\end{matrix}\right]}
{\left[\begin{matrix}#1\\
#2\\
#3
\end{matrix}\right]\times\left[\begin{matrix}#4\\
#5\\
#6
\end{matrix}\right]=\left[\begin{matrix}\left(#2\right)\cdot\left(#6\right)-\left(#3\right)\cdot\left(#5\right)\\
\left(#3\right)\cdot\left(#4\right)-\left(#1\right)\cdot\left(#6\right)\\
\left(#1\right)\cdot\left(#5\right)-\left(#2\right)\cdot\left(#4\right)
\end{matrix}\right]}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\lim}[1]{\lim_{n\rightarrow\infty}\left(#1\right)}
{\lim_{n\rightarrow\infty}\left(#1\right)}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\rank}{\text{Rank}}
{\text{Rank}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\im}{\text{Im}}
{\text{Im}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\sp}{\text{Span}}
{\text{Span}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\fancyF}{\mathscr{F}}
{\mathscr{F}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\fancyB}{\mathscr{B}}
{\mathscr{B}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\baseA}{\mathcal{A}}
{\mathcal{A}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\baseB}{\mathcal{B}}
{\mathcal{B}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\baseC}{\mathcal{C}}
{\mathcal{C}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\FF}{\mathbb{F}}
{\mathbb{F}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\CC}{\mathbb{C}}
{\mathbb{C}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\RR}{\mathbb{R}}
{\mathbb{R}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\QQ}{\mathbb{Q}}
{\mathbb{Q}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\NN}{\mathbb{N}}
{\mathbb{N}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\ZZ}{\mathbb{Z}}
{\mathbb{Z}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\kaliCupDot}{\mathbin{\cupdot}}
{\mathbin{\dot{\cup}}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\kaliBigCupDot}{\mathbin{\bigcupdot}}
{\mathbin{\dot{\bigcup}}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\PP}{\mathbb{P}}
{\mathbb{P}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\EE}{\mathbb{E}}
{\mathbb{E}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\nab}{\overline{\nabla}}
{\overline{\nabla}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\supp}{\text{Supp}}
{\text{Supp}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\geo}{\text{Geo}}
{\text{Geo}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\bin}{\text{Bin}}
{\text{Bin}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\ber}{\text{Ber}}
{\text{Ber}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\poi}{\text{Poi}}
{\text{Poi}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\exp}{\text{Exp}}
{\text{Exp}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\cov}{\text{Cov}}
{\text{Cov}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\var}{\text{Var}}
{\text{Var}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\sinc}{\text{sinc}}
{\text{sinc}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\ra}{\text{\ensuremath{\rightarrow}}}
{\text{\ensuremath{\rightarrow}}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\la}{\text{\ensuremath{\leftarrow}}}
{\text{\ensuremath{\leftarrow}}}
\end_inset


\begin_inset FormulaMacro
\renewcommand{\iff}{\text{\ensuremath{\Leftrightarrow}}}
{\text{\Leftrightarrow}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\E}{\text{\ensuremath{\exists}}}
{\text{\ensuremath{\exists}}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\RA}{\text{\ensuremath{\Rightarrow}}}
{\text{\ensuremath{\Rightarrow}}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\LA}{\text{\ensuremath{\Leftarrow}}}
{\text{\ensuremath{\Leftarrow}}}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset FormulaMacro
\newcommand{\li}{\text{\ensuremath{\langle}}}
{\text{\langle}}
\end_inset

 
\begin_inset FormulaMacro
\newcommand{\ri}{\rangle}
{\text{\rangle}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\vec}{\begin{bmatrix}\end{bmatrix}}
{\begin{bmatrix}\end{bmatrix}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\T}{^{\intercal}}
{^{\intercal}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\xor}{\oplus}
{\oplus}
\end_inset


\begin_inset FormulaMacro
\newcommand{\norm}{\Vert}
{\Vert}
\end_inset


\begin_inset FormulaMacro
\newcommand{\2}{^{2}}
{^{2}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\and}{\wedge}
{\wedge}
\end_inset


\end_layout

\begin_layout Standard

\lang hebrew
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Title
67750 | Advanced Practical Course in Machine Learning
\family roman
\series medium
\shape up
\size largest
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\xout default
\lang hebrew
|
\xout off
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
Ex
\lang hebrew
 
\numeric on
5
\family roman
\series medium
\shape up
\size largest
\emph off
\numeric off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\end_layout

\begin_layout Author
Guy Lutsker 207029448
\end_layout

\end_inset


\end_layout

\begin_layout Section
Image Generation
\end_layout

\begin_layout Standard
In this exercise we were asked to use generate images to imitate images
 from the MNIST data set using Generative Latent Optimization.
\end_layout

\begin_layout Subsection
Implementation
\end_layout

\begin_layout Standard
In my implementation I decided to use the first 2000 images from the MNIST
 data set, and I decided to try and embed the images in a 25 dimensional
 space - meaning I initialized my embedded random vectors for each of the
 class vectors and the content vectors in 25 dimensions.
 I also used a batch size of 32, and 50 epochs.
 To implement Generative Latent Optimization I used the provided network
 and I initialized optimizers for the network, and the two embedding matrices
 (used Adam optimizer).
 In each iteration in the training loop I used all three optimizers to train
 the network, as well as to learn the matrices for content and class.
 A note of following graphs: all of them were generated from randomly picked
 pictures (even ones where the same digit appears I wrote a code to generate
 pictures of the same digit randomly), and so you will not get 
\begin_inset Quotes eld
\end_inset

cherry picked
\begin_inset Quotes erd
\end_inset

 examples here :)
\end_layout

\begin_layout Subsection
Conversions
\end_layout

\begin_layout Standard
Firstly I wanted to see how well can I convert a latent code of an image
 from one class to another, and my first results with no noise and with
 L1 loss were as follows:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/University/Year 3/Semester 1/67750 Advanced Practical Course in Machine Learning/Exs/EX5/plots/L1/sig_0_k-25_2000/Converting 4's to 3.png
	lyxscale 60
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Conversion from 4 class to 3, in L1 loss no noise
\end_layout

\end_inset


\end_layout

\end_inset

These results are interesting and impressive.
 The network was able to convert these randomly chosen 4 images of 4's to
 images of 3's.
 Next I wanted to see all possible conversions, and so I made this picture:
 
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Conversion_of_4_to_3_Across_sigs.gif
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/guylu/anaconda3/Scripts/sig_0.1_k-25_2000.png
	lyxscale 5
	scale 5

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
All possible conversions on L1 loss
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
I also wanted to see how to noise parameter changes our results and so I
 made these graphs for noise 
\begin_inset Formula $\sigma\in[0,1e-100,1e-20,1e-5,1e-4,1e-3,1e-2,1e-1,0.5,1,2,3,4,5,10,20,50,100,500,1000]$
\end_inset

 .
 To visualize the changes the noise parameter I made the following gif:
 
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_All_Possible_Conversions_In_L1_Loss.gi
f
\end_layout

\begin_layout Subsubsection
Noise comparison
\end_layout

\begin_layout Standard
Next I wanted to see how noise would affect the loss convergence - I added
 noise to the content part of the input to the network.
 And here are the results:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename L1_loss.png
	lyxscale 60
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Loss (L1) on different noise level in training
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Unsurprisingly enough we can see a correlation between noise level and final
 loss convergence, larger noise might 
\begin_inset Quotes eld
\end_inset

disturb
\begin_inset Quotes erd
\end_inset

 the loss reduction.
 In addition Noise comparison between the generated images can make a big
 difference.
 Small noise will result in unclear images and, while high noise might take
 over, and result in blurry images that don't converge in anything.
 In addition you asked in the PDF 
\begin_inset Quotes eld
\end_inset

how classifying the class by the content vector can quantify this effect?
\begin_inset Quotes erd
\end_inset

.
 To answer this question I want to address a problem we might encounter
 in this kind of analysis.
 In my understanding of the subject, when training we might get information
 transfer from the class space to the content space, this is ill-advised
 as it might cause us problems in the future.
 And so classifying the class by the content vector can quantify the effect
 of very low noise since if it will have a high accuracy we can infer we
 have an unsupported transfer of information we would like to avoid.
 After looking at the generated plots I decided the best hyper parameters
 for this task are loss L1, and noise = 0.1.
\end_layout

\begin_layout Subsubsection
Learning through Epochs
\end_layout

\begin_layout Standard
Another kind of analysis I wanted to try was evaluating how my model 
\begin_inset Quotes eld
\end_inset

learns
\begin_inset Quotes erd
\end_inset

 to draw through time (epochs).
 To visualize the learning process I decided to create the following graph:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/University/Year 3/Semester 1/67750 Advanced Practical Course in Machine Learning/Exs/EX5/plots/L1/imgs_epochs/sig_0.1.png
	lyxscale 60
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Generation of digit 4 through out training epochs with noise: 0.1 on L1 loss
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see the model indeed improves from epoch to epoch as one might
 expect.
 In addition I wanted to create the following visualizations(lyx +gifs 
\begin_inset Formula $\neq$
\end_inset

 good idea):
\end_layout

\begin_layout Standard
Comparison of different noise levels on learning though epochs (with loss
 L1/L2/L1+L2): 
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Epochs_Learning_In_L1_Loss.gif
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Epochs_Learning_In_L1+L2_Loss.gif
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Epochs_Learning_In_L2_Loss.gif
\end_layout

\begin_layout Standard
Also a cool visualization of learning different digits(the first ones in
 the batch), though epochs(for L1, each frame is 1 epoch):
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Learning_to_draw.gif
\end_layout

\begin_layout Subsection
Scratch generation
\end_layout

\begin_layout Standard
In addition to conversion of content from one class to another, another
 interesting idea is to generate images 
\begin_inset Quotes eld
\end_inset

from scratch
\begin_inset Quotes erd
\end_inset

.
 The process is as follows: generate a random vector in the content space
 -> choose a class vector -> run through network and be amazed(or at least
 you would have been if the data set would have been more cool :) ).
 Generated examples follow:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/University/Year 3/Semester 1/67750 Advanced Practical Course in Machine Learning/Exs/EX5/plots/L1_7/generate_from_scratch_sig_7____.png
	lyxscale 60
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Generation of all digits from scratch from network trained on noise level:
 0.1, with L1 loss
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
And of course, gifs of noise effect on the generated images in L1/L2/L1+L2
 loss:
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Generation_Of_Digits_From_Random_LowD
imVec_L1.gif
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Generation_Of_Digits_From_Random_LowD
imVec_L1+L2.gif
\end_layout

\begin_layout Standard
https://www.cs.huji.ac.il/~guy_lutsker/APML.EX5_Generation_Of_Digits_From_Random_LowD
imVec_L2.gif
\end_layout

\end_body
\end_document
